// noinspection HtmlDeprecatedTag,XmlDeprecatedElement

import type {NextApiRequest, NextApiResponse} from "next";
import Telegram from "@/utils/telegram";
import {getCorrectWord, isDevelopment, Nullable} from "@/utils/helpers";
import {Product} from "@/types/product";
import Products from "@/assets/data/products";
import {validateUrl} from "@/utils/url";
import {child, get, ref, set} from "@firebase/database";
import {FBD} from "@/utils/firebase";
import {ProductData, ProductsData} from "@/utils/data";
import axios from "axios";

interface MessageData {
	update_id: number,
	message: {
		message_id: number,
		from: {
			id: number,
			is_bot: boolean,
			first_name: string,
			last_name: string,
			username: string,
			language_code: string
		},
		chat: {
			id: number,
			first_name: string,
			last_name: string,
			username: string,
			type: string
		},
		date: number,
		text: string
	}
}

function cancel(res: NextApiResponse, status: number): void {
	res.status(status).end();
}

function isUserAllowed(uid: number): boolean {
	return Boolean(~Telegram.ALLOWED_USER_IDS.indexOf(uid));
}

const modelRegex = /(?<=[^\d–∞-—è—ëa-z_-]|^)–ø–ø[\s_.-]?\d{1,3}[\s_.-]?[–∞-—è—ë]{1,3}(?=[^\d–∞-—è—ëa-z_-]|$)/ig;
const priceRegex = /(?<!–ø–ø)([^\d–∞-—è—ëa-z_-]|^)\d{1,3}(\s?\d{3})*(?=[^\d–∞-—è—ëa-z_-]|$)/ig;

function findProduct(model: string): Nullable<Product> {
	const modelHash = model.toLowerCase().replace(/[^\d–∞-—è—ë]/ig, "");
	return Products.find(product => modelHash === product.model.toLowerCase().replace(/[^\d–∞-—è—ë]/ig, "")) || null;
}

function isAnyChanges(productsData: ProductsData): boolean {
	for(const product of Products) {
		const dbMinPrice = productsData[product.id].price;
		const changed = product.getMinPrice() !== dbMinPrice;
		if(changed) return true;
	}
	return false;
}

export default async function telegramWebHook(req: NextApiRequest, res: NextApiResponse) {
	if(req.method !== "POST") return cancel(res, 405);
	const secretToken = req.headers["x-telegram-bot-api-secret-token"];
	if(secretToken !== process.env.TELEGRAM_SECRET_TOKEN) return cancel(res, 403);
	if(!req.body || !req.body.message) return cancel(res, 405);
	const {chat, from, text} = req.body.message as MessageData["message"];
	if(!isUserAllowed(from.id)) return cancel(res, 403);

	const command = text.replace(/\s+/, " ");

	if(/(?<=[^\d–∞-—è—ëa-z_-]|^)—Ü–µ–Ω[–∞—É](?=[^\d–∞-—è—ëa-z_-]|$)/i.test(command)) {
		const hasModel = modelRegex.test(command);
		const hasPrice = priceRegex.test(command);

		if(!hasModel && !hasPrice) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: "‚ùóÔ∏è –ß—Ç–æ–±—ã —è —Å–º–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è –∫–∞–∫–æ–≥–æ-–Ω–∏–±—É–¥—å –ø–æ–¥—ä—ë–º–Ω–∏–∫–∞ –í–∞–º —Å–ª–µ–¥—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –º–Ω–µ –µ–≥–æ –º–æ–¥–µ–ª—å –∏ –Ω–æ–≤—É—é —Ü–µ–Ω—É. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π—Ç–µ –≤–∞—à—É –ø—Ä–æ—Å—å–±—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞."
			});
			return cancel(res, 200);
		}

		if(!hasModel) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: "‚ùóÔ∏è –ß—Ç–æ–±—ã —è —Å–º–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–Ω—É –í–∞–º —Å–ª–µ–¥—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –º–Ω–µ –µ—â—ë –∏ –º–æ–¥–µ–ª—å, —á—Ç–æ–±—ã —è –∑–Ω–∞–ª, –∫–∞–∫–æ–º—É –ø–æ–¥—ä—ë–º–Ω–∏–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π—Ç–µ –≤–∞—à—É –ø—Ä–æ—Å—å–±—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞."
			});
			return cancel(res, 200);
		}

		const modelMatch = command.match(modelRegex)!;

		if(modelMatch.length > 1) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: `‚ùóÔ∏è –ö–∞–∂–µ—Ç—Å—è, –í—ã —É–∫–∞–∑–∞–ª–∏ —Å—Ä–∞–∑—É ${modelMatch.length} ${getCorrectWord("–º–æ–¥–µ–ª–µ–π", "–º–æ–¥–µ–ª—å", "–º–æ–¥–µ–ª–∏", modelMatch.length)}. üßê –Ø –∑–∞–ø—É—Ç–∞–ª—Å—è. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π—Ç–µ –≤–∞—à—É –ø—Ä–æ—Å—å–±—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.`
			});
			return cancel(res, 200);
		}

		const product = findProduct(modelMatch[0]);

		if(!product) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: "‚ùóÔ∏è –ö–∞–∂–µ—Ç—Å—è, –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–æ–¥–µ–ª—å –ø–æ–¥—ä—ë–º–Ω–∏–∫–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –µ–≥–æ –≤ —Å–≤–æ–µ–π –±–∞–∑–µ. –í–æ–∑–º–æ–∂–Ω–æ, –í—ã –≥–¥–µ-—Ç–æ –æ—à–∏–±–ª–∏—Å—å. ü§∑‚Äç‚ôÇÔ∏è –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π—Ç–µ –≤–∞—à—É –ø—Ä–æ—Å—å–±—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞."
			});
			return cancel(res, 200);
		}

		if(!hasPrice) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: `‚ùóÔ∏è –ß—Ç–æ–±—ã —è —Å–º–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è –ø–æ–¥—ä—ë–º–Ω–∏–∫–∞ ${product.model} –í–∞–º —Å–ª–µ–¥—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –º–Ω–µ –∏ —Å–∞–º—É –Ω–æ–≤—É—é —Ü–µ–Ω—É, —á—Ç–æ–±—ã —è –∑–Ω–∞–ª, –Ω–∞ —á—Ç–æ –∑–∞–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ä—É—é. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π—Ç–µ –≤–∞—à—É –ø—Ä–æ—Å—å–±—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.`
			});
			return cancel(res, 200);
		}

		const priceMatch = command.match(priceRegex)!;

		if(priceMatch.length > 1) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: `‚ùóÔ∏è –ö–∞–∂–µ—Ç—Å—è, –í—ã —É–∫–∞–∑–∞–ª–∏ —Å—Ä–∞–∑—É ${priceMatch.length} ${getCorrectWord("—Ü–µ–Ω", "—Ü–µ–Ω—É", "—Ü–µ–Ω—ã", priceMatch.length)}. üßê –Ø –∑–∞–ø—É—Ç–∞–ª—Å—è. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π—Ç–µ –≤–∞—à—É –ø—Ä–æ—Å—å–±—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.`
			});
			return cancel(res, 200);
		}

		const newMinPrice = Number(priceMatch[0].replace(/\s/g, ""));

		const productRef = ref(FBD, `products/${product.id}`);
		const productSnapshot = await get(productRef);
		const productData = productSnapshot.val() as ProductData;

		if(product.getMinPrice() === newMinPrice) {
			if(newMinPrice === productData.price) {
				await Telegram.sendMessage({
					chatId: chat.id,
					text: `
					‚ùï –£ —ç—Ç–æ–≥–æ –ø–æ–¥—ä—ë–º–Ω–∏–∫–∞ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–∞–∫–∞—è —Ü–µ–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ. –¢–∞–∫ —á—Ç–æ –º–Ω–µ –Ω–µ—á–µ–≥–æ –º–µ–Ω—è—Ç—å, –ª–∏–±–æ –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É.
					
					<b>–ü–æ–¥—ä—ë–º–Ω–∏–∫:</b> <a href="${validateUrl(product.getUrl())}">${product.getName()}</a>
					<b>–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞:</b> –æ—Ç ${product.getMinPriceString()} BYN
				`
				});
				return cancel(res, 200);
			} else {
				await set(child(productRef, "price"), product.getMinPrice());

				await Telegram.sendMessage({
					chatId: chat.id,
					text: `
						‚Ü©Ô∏è –ì–æ—Ç–æ–≤–æ! –í–µ—Ä–Ω—É–ª —Ü–µ–Ω—É –∫–∞–∫ –∏ –±—ã–ª–∞ –¥–æ —ç—Ç–æ–≥–æ.
						
						<b>–ü–æ–¥—ä—ë–º–Ω–∏–∫:</b> <a href="${validateUrl(product.getUrl())}">${product.getName()}</a>
						<b>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (—Ç–µ–∫—É—â–∞—è):</b> –æ—Ç ${product.getMinPriceString()} BYN
						<b>–ù–æ–≤–∞—è —Ü–µ–Ω–∞ (–≤ —á–µ—Ä–Ω–æ–≤–∏–∫–µ):</b> <strike>–æ—Ç ${productData.price.toLocaleString("ru-RU")} BYN</strike>
					`
				});
				return cancel(res, 200);
			}
		}

		if(productData.price === newMinPrice) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: `
					‚ùï –Ø —É–∂–µ –∑–∞–Ω—ë—Å —ç—Ç—É —Ü–µ–Ω—É –≤ —á–µ—Ä–Ω–æ–≤–∏–∫. –¢–∞–∫ —á—Ç–æ –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ—ë –Ω–∞ —Å–∞–π—Ç–µ, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.
					
					<b>–ü–æ–¥—ä—ë–º–Ω–∏–∫:</b> <a href="${validateUrl(product.getUrl())}">${product.getName()}</a>
					<b>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (—Ç–µ–∫—É—â–∞—è):</b> <strike>–æ—Ç ${product.getMinPriceString()} BYN</strike>
					<b>–ù–æ–≤–∞—è —Ü–µ–Ω–∞ (–≤ —á–µ—Ä–Ω–æ–≤–∏–∫–µ):</b> –æ—Ç ${newMinPrice.toLocaleString("ru-RU")} BYN
				`
			});
			return cancel(res, 200);
		}

		await set(child(productRef, "price"), newMinPrice);

		await Telegram.sendMessage({
			chatId: chat.id,
			text: `
				üìù –ì–æ—Ç–æ–≤–æ! –ó–∞–Ω—ë—Å –Ω–æ–≤—É—é —Ü–µ–Ω—É –≤ —á–µ—Ä–Ω–æ–≤–∏–∫.
				
				<b>–ü–æ–¥—ä—ë–º–Ω–∏–∫:</b> <a href="${validateUrl(product.getUrl())}">${product.getName()}</a>
				<b>–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (—Ç–µ–∫—É—â–∞—è):</b> <strike>–æ—Ç ${product.getMinPriceString()} BYN</strike>
				<b>–ù–æ–≤–∞—è —Ü–µ–Ω–∞ (–≤ —á–µ—Ä–Ω–æ–≤–∏–∫–µ):</b> –æ—Ç ${newMinPrice.toLocaleString("ru-RU")} BYN
				
				‚ö†Ô∏è –ß—Ç–æ–±—ã –Ω–æ–≤–∞—è —Ü–µ–Ω–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –Ω–∞ —Å–∞–π—Ç–µ, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.
			`
		});
		return cancel(res, 200);
	}

	if(/(?<=[^\d–∞-—è—ëa-z_-]|^)—Ü–µ–Ω—ã(?=[^\d–∞-—è—ëa-z_-]|$)/i.test(command) && !modelRegex.test(command) && !priceRegex.test(command)) {
		const productsSnapshot = await get(ref(FBD, "products"));
		const productsData = productsSnapshot.val() as ProductsData;

		let anyChanges = isAnyChanges(productsData);

		const productsInfo = Products.map(product => {
			const dbMinPrice = productsData[product.id].price;
			const changed = product.getMinPrice() !== dbMinPrice;

			return `
				<a href="${validateUrl(product.getUrl())}">${product.getName()}</a>
				<b>–¶–µ–Ω–∞:</b> –æ—Ç ${dbMinPrice.toLocaleString("ru-RU")} BYN${changed ? ` <strike>(–æ—Ç ${product.getMinPriceString()} BYN)</strike>` : ""}
			`.trim();
		});

		await Telegram.sendMessage({
			chatId: chat.id,
			text: `
				üè∑Ô∏è –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –Ω–∞ –ø–æ–¥—ä—ë–º–Ω–∏–∫–∏.
				
				${productsInfo.join("\n\n")}
				
				${anyChanges ? "‚ö†Ô∏è –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ü–µ–Ω—ã. –ü–æ–∫–∞-—á—Ç–æ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —á–µ—Ä–Ω–æ–≤–∏–∫–µ. –ß—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Ö –Ω–∞ —Å–∞–π—Ç–µ, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è." : ""}
			`
		});
		return cancel(res, 200);
	}

	if(/(?<=[^\d–∞-—è—ëa-z_-]|^)(–æ–ø—É–±–ª–∏–∫(—É–π|–æ–≤–∞—Ç—å)|–ø—Ä–∏–º–µ–Ω(–∏|–∏—Ç—å)|–≤–Ω–µ—Å—Ç–∏)\s([\d–∞-—è—ëa-z]+?\s)*?–∏–∑–º–µ–Ω–µ–Ω–∏—è(?=[^\d–∞-—è—ëa-z_-]|$)/i.test(command) && !modelRegex.test(command) && !priceRegex.test(command)) {
		const productsSnapshot = await get(ref(FBD, "products"));
		const productsData = productsSnapshot.val() as ProductsData;
		let anyChanges = isAnyChanges(productsData);

		if(!anyChanges) {
			await Telegram.sendMessage({
				chatId: chat.id,
				text: "‚ùï –ù–∏–∫–∞–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç."
			});
			return cancel(res, 200);
		}

		await Telegram.sendMessage({
			chatId: chat.id,
			text: `
				‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –≤ —Ç–µ—á–µ–Ω–∏–µ 2-—É—Ö –º–∏–Ω—É—Ç.
				
				üí° –ü–æ–∫–∞ —á—Ç–æ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å 2 –º–∏–Ω—É—Ç—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º —Å–Ω–æ–≤–∞.
				
				üí° –ù–µ –∑–∞–±—ã–≤–∞–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Ä—É—á–Ω—É—é –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞ —Å–∞–π—Ç–∞—Ö <a href="https://yandex.ru/sprav/34792489/edit/price-lists">–Ø–Ω–¥–µ–∫—Å.–ë–∏–∑–Ω–µ—Å–∞</a> (–∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤) –∏ <a href="https://direct.yandex.by/dna/campaigns-edit?ulogin=asterlift&campaigns-ids=108261483">–Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç–∞</a> (—Ä–µ–∫–ª–∞–º–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è).
			`
		});

		if(!isDevelopment()) await axios.post(process.env.VERCEL_REDEPLOY_HOOK_URL!);

		return cancel(res, 200);
	}

	if(/(?<=[^\d–∞-—è—ëa-z_-]|^)–ø–æ–º–æ—â—å(?=[^\d–∞-—è—ëa-z_-]|$)/i.test(command) && !modelRegex.test(command) && !priceRegex.test(command)) {
		await Telegram.sendMessage({
			chatId: chat.id,
			text: `
				üõ†Ô∏è –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.

				<code>–¶–µ–Ω—ã</code> ‚Äì –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–Ω –Ω–∞ –ø–æ–¥—ä—ë–º–Ω–∏–∫–∏.

				<code>–¶–µ–Ω–∞ [–º–æ–¥–µ–ª—å] [–Ω–æ–≤–∞—è —Ü–µ–Ω–∞]</code> ‚Äì —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–Ω—É –∫–∞–∫–æ–º—É-–ª–∏–±–æ –ø–æ–¥—ä—ë–º–Ω–∏–∫—É.
				
				<code>–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</code> ‚Äì –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤–Ω–µ—Å—ë–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ.
				
				<code>–ü–æ–º–æ—â—å</code> ‚Äì –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
			`
		});
		return cancel(res, 200);
	}

	await Telegram.sendMessage({
		chatId: chat.id,
		text: `
			‚ùï –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º–æ–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ —Å–∞–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–æ–±–Ω–æ–≥–æ —Ä–æ–¥–∞.
			
			üí° –í—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ–∏—Å—Ç—å —É –º–µ–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–Ω—É –Ω–∞ –ø–æ–¥—ä—ë–º–Ω–∏–∫.
			
			üí° –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ¬´–ü–æ–º–æ—â—å¬ª —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.
		`
	});
	return cancel(res, 200);
}